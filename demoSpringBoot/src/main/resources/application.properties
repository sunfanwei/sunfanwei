server.port = 8080

#配置视图解析器
#其中：/ 表示目录为src/main/webapp ， 注意/是在Web Resource Directory中怎么配置的就用什么
spring.mvc.view.prefix=/
spring.mvc.view.suffix=.jsp
# 集成完毕之后，剩下的步骤和我们使用 Spring MVC 一样


# session 存储类型。
spring.session.store-type = redis
# session 超时。如果未指定持续时间后缀，则使用秒。
server.servlet.session.timeout=5
# session 刷新模式。
spring.session.redis.flush-mode=on_save
# 用于存储session 的键的命名空间。
spring.session.redis.namespace=spring:session

#Redis服务器主机。
spring.redis.host=localhost
#Redis服务器的登录密码。
spring.redis.password=
#Redis服务器端口。
spring.redis.port=6379

spring.activemq.broker-url=tcp://localhost:61616
spring.activemq.user=admin
spring.activemq.password=admin
#判断队列还是主题  false为队列 true为主题  不写的默认值也是队列
spring.jms.pub-sub-domain=false
#自己定义队列名称
myqueue=boot-activemq-queue
topicName = publish.topic



spring.data.mongodb.uri=mongodb://localhost:27017/test


# es集群名称
elasticsearch.clusterName=my-cluster
#es用户名
elasticsearch.userName=elastic
#es密码
elasticsearch.password=elastic
# es host ip 地址(集群)：本次使用的是单机模式
elasticsearch.hosts=localhost:9200
# es 请求方式
elasticsearch.scheme=http
# es 连接超时时间
elasticsearch.connectTimeOut=1000
# es socket 连接超时时间
elasticsearch.socketTimeOut=30000
# es 请求超时时间
elasticsearch.connectionRequestTimeOut=500
# es 最大连接数
elasticsearch.maxConnectNum=100
# es 每个路由的最大连接数
elasticsearch.maxConnectNumPerRoute=100


